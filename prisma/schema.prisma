generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex", "referentialIntegrity", "postgresqlExtensions"]
    extensions      = [pgcrypto]
}

datasource db {
    provider     = "postgresql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Game {
    id        String      @id @default(cuid())
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
    name      String
    Character Character[]
    Faction   Faction[]
    Element   Element[]
    Talents   Talents[]
    Weapon    Weapon[]
    Material  Material[]
}

model Character {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String
    image     String
    game      Game     @relation(fields: [gameId], references: [id])
    gameId    String

    faction   Faction @relation(fields: [factionId], references: [id])
    factionId String

    element   Element @relation(fields: [elementId], references: [id])
    elementId String

    talents   Talents @relation(fields: [talentsId], references: [id])
    talentsId String

    weapon   Weapon @relation(fields: [weaponId], references: [id])
    weaponId String

    material          Material            @relation(fields: [materialId], references: [id])
    materialId        String
    CharacterOfTheDay CharacterOfTheDay[]
}

model Faction {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    image     String?
    gameId    String
    game      Game     @relation(fields: [gameId], references: [id])

    Character Character[]
    Talents   Talents[]
}

model Element {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    image     String
    gameId    String
    game      Game     @relation(fields: [gameId], references: [id])

    Character Character[]
}

model Talents {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    image     String
    gameId    String
    game      Game     @relation(fields: [gameId], references: [id])

    Character Character[]
    Faction   Faction?    @relation(fields: [factionId], references: [id])
    factionId String?
}

model Weapon {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    image     String
    gameId    String
    game      Game     @relation(fields: [gameId], references: [id])

    Character Character[]
}

model Material {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    name      String
    image     String
    gameId    String
    game      Game     @relation(fields: [gameId], references: [id])

    Character Character[]
}

model CharacterOfTheDay {
    id          Int    @id @default(autoincrement())
    createdAt   String @unique
    characterId String

    Character Character @relation(fields: [characterId], references: [id])
}
